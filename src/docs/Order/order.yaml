openapi: 3.0.0
info:
  title: Order API
  description: API for managing orders
  version: 1.0.0
servers:
  - url: http://localhost:3000/api/v1  
paths:
  /orders/{customerId}:
    get:
      tags:
        - Orders
      summary: Get all orders for a customer
      description: Returns a list of all orders for a specific customer.
      parameters:
        - in: path
          name: customerId
          schema:
            type: string
          required: true
          description: Customer ID
      responses:
        '200':
          description: Successful response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
        '401':
          description: Unauthenticated. Please check if you are logged in.
        '403':
          description: Unauthorized. Please check if you have the right role.
        '500':
          description: Internal Server Error.

  /orders/{orderId}:
    get:
      tags:
        - Orders
      summary: Get an order by ID
      description: Returns a single order based on its ID.
      parameters:
        - in: path
          name: orderId
          schema:
            type: string
          required: true
          description: Order ID
      responses:
        '200':
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '401':
          description: Unauthenticated. Please check if you are logged in.
        '403':
          description: Unauthorized. Please check if you have the right role.
        '404':
          description: Order not found.
        '500':
          description: Internal Server Error.
    delete:
      tags:
        - Orders
      summary: Delete an order by ID
      description: Deletes a single order based on its ID.
      parameters:
        - in: path
          name: orderId
          schema:
            type: string
          required: true
          description: Order ID
      responses:
        '204':
          description: Order deleted successfully.
        '401':
          description: Unauthenticated. Please check if you are logged in.
        '403':
          description: Unauthorized. Please check if you have the right role.
        '404':
          description: Order not found.
        '500':
          description: Internal Server Error.        

  /orders:
    post:
      tags:
        - Orders
      summary: Create a new order.
      description: Creates a new order with the given details.
      requestBody:
        description: Create a new order.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewOrder'
        required: true
      responses:
        '201':
          description: Order created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '401':
          description: Unauthenticated. Please check if you are logged in.
        '403':
          description: Unauthorized. Please check if you have the right role.
        '422':
          description: Invalid input. Please check the provided data.
        '500':
          description: Internal Server Error.

  /orders/{orderId}/orderItems:
    post:
      tags:
        - Orders
      summary: Add a new order item to an existing order
      description: Adds a new order item to an existing order.
      parameters:
        - in: path
          name: orderId
          schema:
            type: string
          required: true
          description: Order ID
      requestBody:
        description: Add a new order item.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewOrderItem'
        required: true
      responses:
        '200':
          description: Successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '401':
          description: Unauthenticated. Please check if you are logged in.
        '403':
          description: Unauthorized. Please check if you have the right role.
        '404':
          description: Order not found.
        '500':
          description: Internal Server Error.
          

components:
  schemas:
    OrderItem:
      type: object
      properties:
        dishId:
          type: string
          description: Dish ID
          example: 64bbd06f57ca63db37263e57
        quantity:
          type: integer
          description: Quantity of the dish
          example: 1
        price:
          type: number
          description: Price of the order item
          example: 12.99

    Order:
      type: object
      properties:
        _id:
          type: string
          example: 64bbd06f57ca63db37263e58
        customerId:
          type: string
          example: 64bbd06f57ca63db37263e56
        chefId:
          type: string
          example: 64bbd06f57ca63db37263e59
        totalPrice:
          type: number
          example: 25.98
        status:
          type: string
          example: pending
        orderItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
          example:
            - dishId: 64bbd06f57ca63db37263e57
              quantity: 1
              price: 12.99
            - dishId: 64bbd06f57ca63db37263e60
              quantity: 1
              price: 12.99
        createdAt:
          type: string
          format: date-time
          example: '2023-07-22T12:49:51.705Z'
        updatedAt:
          type: string
          format: date-time
          example: '2023-07-22T12:49:51.705Z'
