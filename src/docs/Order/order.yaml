paths:
  /api/orders:
    post:
      tags:
        - Order
      summary: Create a new order.
      description: Create a new order for customer.
      responses:
        '201':
          description: Order created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/definitions/Order'
        '400':
          description: Customer doesn't have a cart.
        '401':
          description: Unauthenticated or invalid token.
        '403':
          description: Unauthorized. Please check if you have the right role.
  /api/orders/customer:
    get:
      tags:
        - Order
      summary: Get all orders for a customer.
      description: Get all orders for customer.
      responses:
        '200':
          description: Orders retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/definitions/Order'
        '401':
          description: Unauthenticated or invalid token.
        '403':
          description: Unauthorized. Please check if you have the right role.
  /api/orders/chef:
    get:
      tags:
        - Order
      summary: Get all orders for a chef.
      description: Get all orders for chef.
      responses:
        '200':
          description: Orders retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/definitions/Order'
        '401':
          description: Unauthenticated or invalid token.
        '403':
          description: Unauthorized. Please check if you have the right role.
  /api/orders/{id}:
    put:
      tags:
        - Order
      summary: Update the status of an order.
      description: Update the status of an order by it's id.
      parameters:
        - in: path 
          name: id 
          description: The order id.
          required: true
          schema:
            type: string
      requestBody:
        description: Update the status of an order.
        content:
          application/json:
            schema:
              properties:
                status:
                  type : string
                  enum : [canceled, in_progress, delivered]
        required: true
      responses :
        '200' :
          description : Order updated successfully.
          schema :
            $ref : '#/definitions/Order'
        '422' :
          description : Invalid input or missing parameters.
        '401' :
          description: Unauthenticated or invalid token.
        '403':
          description: Unauthorized. Please check if you have the right role.
        '404':
          description: Order not found.
    delete :
      summary : Delete an order by the customer 
      tags :
        - Order 
      parameters :
        - in : path 
          name : id 
          description : The order id.
          required : true
          schema:
            type: string
      responses :
        '204' :
          description : Order deleted successfully.
        '401' :
          description: Unauthenticated or invalid token.
        '403':
          description: Unauthorized. Please check if you have the right role.
        '404':
          description: Order not found.

definitions :
  Order :
    type : object 
    properties :
      _id :
        type : string 
        format : uuid 
      customerId :
        type : string 
        format : uuid  
      chefId :
        type : string  
        format : uuid  
      totalPrice :
        type : number  
      status :
        type : string  
        enum : [pending, accepted, rejected, completed]  
      orderItems :
        type : array  
        items :
          type: object
          properties:
            price:
              type: number
            dishId:
              type: string
              format: uuid
            quantity:
              type: integer
              minimum: 1